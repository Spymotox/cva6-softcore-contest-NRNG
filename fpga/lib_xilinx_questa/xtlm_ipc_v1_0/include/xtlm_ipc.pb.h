// 67d7842dbbe25473c3c32b93c0da8047785f30d78e8a024de1b57352245f9689
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: xtlm_ipc.proto

#ifndef PROTOBUF_INCLUDED_xtlm_5fipc_2eproto
#define PROTOBUF_INCLUDED_xtlm_5fipc_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_xtlm_5fipc_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_xtlm_5fipc_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_xtlm_5fipc_2eproto();
namespace xtlm_ipc {
class axi_stream_packet;
class axi_stream_packetDefaultTypeInternal;
extern axi_stream_packetDefaultTypeInternal _axi_stream_packet_default_instance_;
class axi_stream_resp;
class axi_stream_respDefaultTypeInternal;
extern axi_stream_respDefaultTypeInternal _axi_stream_resp_default_instance_;
class header;
class headerDefaultTypeInternal;
extern headerDefaultTypeInternal _header_default_instance_;
}  // namespace xtlm_ipc
namespace google {
namespace protobuf {
template<> ::xtlm_ipc::axi_stream_packet* Arena::CreateMaybeMessage<::xtlm_ipc::axi_stream_packet>(Arena*);
template<> ::xtlm_ipc::axi_stream_resp* Arena::CreateMaybeMessage<::xtlm_ipc::axi_stream_resp>(Arena*);
template<> ::xtlm_ipc::header* Arena::CreateMaybeMessage<::xtlm_ipc::header>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace xtlm_ipc {

enum header_message_type {
  header_message_type_NONE = 0,
  header_message_type_AXIS_REQ = 1,
  header_message_type_AXIS_RESP = 2,
  header_message_type_AXIMM_WRITE_REQ = 3,
  header_message_type_AXIMM_READ_REQ = 4,
  header_message_type_AXIMM_WRITE_RESP = 5,
  header_message_type_AXIMM_READ_RESP = 6
};
bool header_message_type_IsValid(int value);
const header_message_type header_message_type_message_type_MIN = header_message_type_NONE;
const header_message_type header_message_type_message_type_MAX = header_message_type_AXIMM_READ_RESP;
const int header_message_type_message_type_ARRAYSIZE = header_message_type_message_type_MAX + 1;

const ::google::protobuf::EnumDescriptor* header_message_type_descriptor();
inline const ::std::string& header_message_type_Name(header_message_type value) {
  return ::google::protobuf::internal::NameOfEnum(
    header_message_type_descriptor(), value);
}
inline bool header_message_type_Parse(
    const ::std::string& name, header_message_type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<header_message_type>(
    header_message_type_descriptor(), name, value);
}
// ===================================================================

class header :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xtlm_ipc.header) */ {
 public:
  header();
  virtual ~header();

  header(const header& from);

  inline header& operator=(const header& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  header(header&& from) noexcept
    : header() {
    *this = ::std::move(from);
  }

  inline header& operator=(header&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const header& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const header* internal_default_instance() {
    return reinterpret_cast<const header*>(
               &_header_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(header* other);
  friend void swap(header& a, header& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline header* New() const final {
    return CreateMaybeMessage<header>(nullptr);
  }

  header* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<header>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const header& from);
  void MergeFrom(const header& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(header* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef header_message_type message_type;
  static const message_type NONE =
    header_message_type_NONE;
  static const message_type AXIS_REQ =
    header_message_type_AXIS_REQ;
  static const message_type AXIS_RESP =
    header_message_type_AXIS_RESP;
  static const message_type AXIMM_WRITE_REQ =
    header_message_type_AXIMM_WRITE_REQ;
  static const message_type AXIMM_READ_REQ =
    header_message_type_AXIMM_READ_REQ;
  static const message_type AXIMM_WRITE_RESP =
    header_message_type_AXIMM_WRITE_RESP;
  static const message_type AXIMM_READ_RESP =
    header_message_type_AXIMM_READ_RESP;
  static inline bool message_type_IsValid(int value) {
    return header_message_type_IsValid(value);
  }
  static const message_type message_type_MIN =
    header_message_type_message_type_MIN;
  static const message_type message_type_MAX =
    header_message_type_message_type_MAX;
  static const int message_type_ARRAYSIZE =
    header_message_type_message_type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  message_type_descriptor() {
    return header_message_type_descriptor();
  }
  static inline const ::std::string& message_type_Name(message_type value) {
    return header_message_type_Name(value);
  }
  static inline bool message_type_Parse(const ::std::string& name,
      message_type* value) {
    return header_message_type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .xtlm_ipc.header.message_type msg_type = 1 [default = NONE];
  bool has_msg_type() const;
  void clear_msg_type();
  static const int kMsgTypeFieldNumber = 1;
  ::xtlm_ipc::header_message_type msg_type() const;
  void set_msg_type(::xtlm_ipc::header_message_type value);

  // required fixed32 msg_length = 2;
  bool has_msg_length() const;
  void clear_msg_length();
  static const int kMsgLengthFieldNumber = 2;
  ::google::protobuf::uint32 msg_length() const;
  void set_msg_length(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:xtlm_ipc.header)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int msg_type_;
  ::google::protobuf::uint32 msg_length_;
  friend struct ::TableStruct_xtlm_5fipc_2eproto;
};
// -------------------------------------------------------------------

class axi_stream_packet :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xtlm_ipc.axi_stream_packet) */ {
 public:
  axi_stream_packet();
  virtual ~axi_stream_packet();

  axi_stream_packet(const axi_stream_packet& from);

  inline axi_stream_packet& operator=(const axi_stream_packet& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  axi_stream_packet(axi_stream_packet&& from) noexcept
    : axi_stream_packet() {
    *this = ::std::move(from);
  }

  inline axi_stream_packet& operator=(axi_stream_packet&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const axi_stream_packet& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const axi_stream_packet* internal_default_instance() {
    return reinterpret_cast<const axi_stream_packet*>(
               &_axi_stream_packet_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(axi_stream_packet* other);
  friend void swap(axi_stream_packet& a, axi_stream_packet& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline axi_stream_packet* New() const final {
    return CreateMaybeMessage<axi_stream_packet>(nullptr);
  }

  axi_stream_packet* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<axi_stream_packet>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const axi_stream_packet& from);
  void MergeFrom(const axi_stream_packet& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(axi_stream_packet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // optional bytes tuser = 4;
  bool has_tuser() const;
  void clear_tuser();
  static const int kTuserFieldNumber = 4;
  const ::std::string& tuser() const;
  void set_tuser(const ::std::string& value);
  #if LANG_CXX11
  void set_tuser(::std::string&& value);
  #endif
  void set_tuser(const char* value);
  void set_tuser(const void* value, size_t size);
  ::std::string* mutable_tuser();
  ::std::string* release_tuser();
  void set_allocated_tuser(::std::string* tuser);

  // optional bytes tkeep = 5;
  bool has_tkeep() const;
  void clear_tkeep();
  static const int kTkeepFieldNumber = 5;
  const ::std::string& tkeep() const;
  void set_tkeep(const ::std::string& value);
  #if LANG_CXX11
  void set_tkeep(::std::string&& value);
  #endif
  void set_tkeep(const char* value);
  void set_tkeep(const void* value, size_t size);
  ::std::string* mutable_tkeep();
  ::std::string* release_tkeep();
  void set_allocated_tkeep(::std::string* tkeep);

  // required int32 data_length = 2;
  bool has_data_length() const;
  void clear_data_length();
  static const int kDataLengthFieldNumber = 2;
  ::google::protobuf::int32 data_length() const;
  void set_data_length(::google::protobuf::int32 value);

  // optional bool tlast = 3;
  bool has_tlast() const;
  void clear_tlast();
  static const int kTlastFieldNumber = 3;
  bool tlast() const;
  void set_tlast(bool value);

  // @@protoc_insertion_point(class_scope:xtlm_ipc.axi_stream_packet)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::internal::ArenaStringPtr tuser_;
  ::google::protobuf::internal::ArenaStringPtr tkeep_;
  ::google::protobuf::int32 data_length_;
  bool tlast_;
  friend struct ::TableStruct_xtlm_5fipc_2eproto;
};
// -------------------------------------------------------------------

class axi_stream_resp :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xtlm_ipc.axi_stream_resp) */ {
 public:
  axi_stream_resp();
  virtual ~axi_stream_resp();

  axi_stream_resp(const axi_stream_resp& from);

  inline axi_stream_resp& operator=(const axi_stream_resp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  axi_stream_resp(axi_stream_resp&& from) noexcept
    : axi_stream_resp() {
    *this = ::std::move(from);
  }

  inline axi_stream_resp& operator=(axi_stream_resp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const axi_stream_resp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const axi_stream_resp* internal_default_instance() {
    return reinterpret_cast<const axi_stream_resp*>(
               &_axi_stream_resp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(axi_stream_resp* other);
  friend void swap(axi_stream_resp& a, axi_stream_resp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline axi_stream_resp* New() const final {
    return CreateMaybeMessage<axi_stream_resp>(nullptr);
  }

  axi_stream_resp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<axi_stream_resp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const axi_stream_resp& from);
  void MergeFrom(const axi_stream_resp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(axi_stream_resp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool ready = 1 [default = true];
  bool has_ready() const;
  void clear_ready();
  static const int kReadyFieldNumber = 1;
  bool ready() const;
  void set_ready(bool value);

  // @@protoc_insertion_point(class_scope:xtlm_ipc.axi_stream_resp)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool ready_;
  friend struct ::TableStruct_xtlm_5fipc_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// header

// required .xtlm_ipc.header.message_type msg_type = 1 [default = NONE];
inline bool header::has_msg_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void header::clear_msg_type() {
  msg_type_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::xtlm_ipc::header_message_type header::msg_type() const {
  // @@protoc_insertion_point(field_get:xtlm_ipc.header.msg_type)
  return static_cast< ::xtlm_ipc::header_message_type >(msg_type_);
}
inline void header::set_msg_type(::xtlm_ipc::header_message_type value) {
  assert(::xtlm_ipc::header_message_type_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:xtlm_ipc.header.msg_type)
}

// required fixed32 msg_length = 2;
inline bool header::has_msg_length() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void header::clear_msg_length() {
  msg_length_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::uint32 header::msg_length() const {
  // @@protoc_insertion_point(field_get:xtlm_ipc.header.msg_length)
  return msg_length_;
}
inline void header::set_msg_length(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  msg_length_ = value;
  // @@protoc_insertion_point(field_set:xtlm_ipc.header.msg_length)
}

// -------------------------------------------------------------------

// axi_stream_packet

// required bytes data = 1;
inline bool axi_stream_packet::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void axi_stream_packet::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& axi_stream_packet::data() const {
  // @@protoc_insertion_point(field_get:xtlm_ipc.axi_stream_packet.data)
  return data_.GetNoArena();
}
inline void axi_stream_packet::set_data(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xtlm_ipc.axi_stream_packet.data)
}
#if LANG_CXX11
inline void axi_stream_packet::set_data(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xtlm_ipc.axi_stream_packet.data)
}
#endif
inline void axi_stream_packet::set_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xtlm_ipc.axi_stream_packet.data)
}
inline void axi_stream_packet::set_data(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xtlm_ipc.axi_stream_packet.data)
}
inline ::std::string* axi_stream_packet::mutable_data() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:xtlm_ipc.axi_stream_packet.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* axi_stream_packet::release_data() {
  // @@protoc_insertion_point(field_release:xtlm_ipc.axi_stream_packet.data)
  if (!has_data()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void axi_stream_packet::set_allocated_data(::std::string* data) {
  if (data != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:xtlm_ipc.axi_stream_packet.data)
}

// required int32 data_length = 2;
inline bool axi_stream_packet::has_data_length() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void axi_stream_packet::clear_data_length() {
  data_length_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int32 axi_stream_packet::data_length() const {
  // @@protoc_insertion_point(field_get:xtlm_ipc.axi_stream_packet.data_length)
  return data_length_;
}
inline void axi_stream_packet::set_data_length(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  data_length_ = value;
  // @@protoc_insertion_point(field_set:xtlm_ipc.axi_stream_packet.data_length)
}

// optional bool tlast = 3;
inline bool axi_stream_packet::has_tlast() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void axi_stream_packet::clear_tlast() {
  tlast_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool axi_stream_packet::tlast() const {
  // @@protoc_insertion_point(field_get:xtlm_ipc.axi_stream_packet.tlast)
  return tlast_;
}
inline void axi_stream_packet::set_tlast(bool value) {
  _has_bits_[0] |= 0x00000010u;
  tlast_ = value;
  // @@protoc_insertion_point(field_set:xtlm_ipc.axi_stream_packet.tlast)
}

// optional bytes tuser = 4;
inline bool axi_stream_packet::has_tuser() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void axi_stream_packet::clear_tuser() {
  tuser_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& axi_stream_packet::tuser() const {
  // @@protoc_insertion_point(field_get:xtlm_ipc.axi_stream_packet.tuser)
  return tuser_.GetNoArena();
}
inline void axi_stream_packet::set_tuser(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  tuser_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xtlm_ipc.axi_stream_packet.tuser)
}
#if LANG_CXX11
inline void axi_stream_packet::set_tuser(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  tuser_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xtlm_ipc.axi_stream_packet.tuser)
}
#endif
inline void axi_stream_packet::set_tuser(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  tuser_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xtlm_ipc.axi_stream_packet.tuser)
}
inline void axi_stream_packet::set_tuser(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  tuser_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xtlm_ipc.axi_stream_packet.tuser)
}
inline ::std::string* axi_stream_packet::mutable_tuser() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:xtlm_ipc.axi_stream_packet.tuser)
  return tuser_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* axi_stream_packet::release_tuser() {
  // @@protoc_insertion_point(field_release:xtlm_ipc.axi_stream_packet.tuser)
  if (!has_tuser()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return tuser_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void axi_stream_packet::set_allocated_tuser(::std::string* tuser) {
  if (tuser != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  tuser_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tuser);
  // @@protoc_insertion_point(field_set_allocated:xtlm_ipc.axi_stream_packet.tuser)
}

// optional bytes tkeep = 5;
inline bool axi_stream_packet::has_tkeep() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void axi_stream_packet::clear_tkeep() {
  tkeep_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& axi_stream_packet::tkeep() const {
  // @@protoc_insertion_point(field_get:xtlm_ipc.axi_stream_packet.tkeep)
  return tkeep_.GetNoArena();
}
inline void axi_stream_packet::set_tkeep(const ::std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  tkeep_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xtlm_ipc.axi_stream_packet.tkeep)
}
#if LANG_CXX11
inline void axi_stream_packet::set_tkeep(::std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  tkeep_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xtlm_ipc.axi_stream_packet.tkeep)
}
#endif
inline void axi_stream_packet::set_tkeep(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  tkeep_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xtlm_ipc.axi_stream_packet.tkeep)
}
inline void axi_stream_packet::set_tkeep(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  tkeep_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xtlm_ipc.axi_stream_packet.tkeep)
}
inline ::std::string* axi_stream_packet::mutable_tkeep() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:xtlm_ipc.axi_stream_packet.tkeep)
  return tkeep_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* axi_stream_packet::release_tkeep() {
  // @@protoc_insertion_point(field_release:xtlm_ipc.axi_stream_packet.tkeep)
  if (!has_tkeep()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return tkeep_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void axi_stream_packet::set_allocated_tkeep(::std::string* tkeep) {
  if (tkeep != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  tkeep_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tkeep);
  // @@protoc_insertion_point(field_set_allocated:xtlm_ipc.axi_stream_packet.tkeep)
}

// -------------------------------------------------------------------

// axi_stream_resp

// optional bool ready = 1 [default = true];
inline bool axi_stream_resp::has_ready() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void axi_stream_resp::clear_ready() {
  ready_ = true;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool axi_stream_resp::ready() const {
  // @@protoc_insertion_point(field_get:xtlm_ipc.axi_stream_resp.ready)
  return ready_;
}
inline void axi_stream_resp::set_ready(bool value) {
  _has_bits_[0] |= 0x00000001u;
  ready_ = value;
  // @@protoc_insertion_point(field_set:xtlm_ipc.axi_stream_resp.ready)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace xtlm_ipc

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::xtlm_ipc::header_message_type> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::xtlm_ipc::header_message_type>() {
  return ::xtlm_ipc::header_message_type_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_xtlm_5fipc_2eproto
